pluginManagement {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/releases' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        mavenLocal()
        google {
            content {
                includeGroupByRegex("com\\.android.*")
                includeGroupByRegex("com\\.google.*")
                includeGroupByRegex("androidx.*")
            }
        }
        maven { url 'https://www.jitpack.io' }
        mavenCentral()
        gradlePluginPortal()
    }
}
dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        mavenLocal()
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://maven.aliyun.com/repository/releases' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://www.jitpack.io' }
    }
    versionCatalogs {
        create('androidxLibs') {
            // 别名 group artifact version
            library('swiperefreshlayout','androidx.swiperefreshlayout','swiperefreshlayout').version('1.2.0-alpha01')
            library('palette','androidx.palette','palette').version('1.0.0')
            library('core-ktx', 'androidx.core', 'core-ktx').version('1.7.0')
            library('appcompat', 'androidx.appcompat', 'appcompat').version('1.4.1')
            library('constraintlayout', 'androidx.constraintlayout', 'constraintlayout').version('2.1.3')
            library('material', 'com.google.android.material', 'material').version('1.5.0')
            // navigation
            library('navigation-fragment', 'androidx.navigation', 'navigation-fragment-ktx').version('2.5.3')
            library('navigation-ui', 'androidx.navigation', 'navigation-ui-ktx').version('2.5.3')
            // paging3
            library('ktx-stdlib-common','org.jetbrains.kotlin','kotlin-stdlib-common').version('1.8.0')
            library('paging-runtime', 'androidx.paging', 'paging-runtime').version('3.1.1')
            // viewpager2
            library('viewpager2', 'androidx.viewpager2', 'viewpager2').version('1.0.0')
            // androidX通用依赖
            bundle('androidx', ['viewpager2','swiperefreshlayout','palette','navigation-fragment', 'navigation-ui', 'core-ktx','ktx-stdlib-common', 'appcompat', 'constraintlayout','paging-runtime'])

            // exoplayer
            library('exoplayer-core','com.google.android.exoplayer','exoplayer-core').version('2.18.5')
            library('exoplayer-ui','com.google.android.exoplayer','exoplayer-ui').version('2.18.5')
            bundle('exoplayer', ['exoplayer-core', 'exoplayer-ui'])

            // qq_open_sdk
            library('qqopensdk','com.tencent.tauth','qqopensdk').version('3.52.0')

            // room
            def room_version='2.6.1'
            library('room-runtime','androidx.room','room-runtime').version(room_version)
            library('room-ktx','androidx.room','room-ktx').version(room_version)
            library('room-compiler','androidx.room','room-compiler').version(room_version)
            bundle('room',['room-runtime','room-ktx'])

            // aliyun oss
            library('osssdk','com.aliyun.dpa','oss-android-sdk').version('2.9.13')

            // camerax
            def camerax_version="1.3.0-alpha04"
            library('camera-core','androidx.camera','camera-core').version(camerax_version)
            library('camera-camera2','androidx.camera','camera-camera2').version(camerax_version)
            library('camera-lifecycle','androidx.camera','camera-lifecycle').version(camerax_version)
            library('camera-view','androidx.camera','camera-view').version(camerax_version)
            library('camera-extensions','androidx.camera','camera-extensions').version(camerax_version)
            bundle('camerax',['camera-core','camera-camera2','camera-lifecycle','camera-view','camera-extensions'])

            // gesture imageview
            library('photoView','com.github.chrisbanes','PhotoView').version('2.3.0')


            // nav-plugin
            library('asm', 'org.ow2.asm', 'asm').version('9.2')
            library('asm-tree', 'org.ow2.asm', 'asm-tree').version('9.2')
            library('commons-io', 'commons-io', 'commons-io').version('2.6')
            library('commons-codec', 'commons-codec', 'commons-codec').version('1.11')
            library('kotlinpoet', 'com.squareup', 'kotlinpoet').version('1.2.0')
            library('agp', 'com.android.tools.build', 'gradle').version('8.6.0')
            bundle('nav-plugin',['asm','asm-tree','commons-io','kotlinpoet','agp','commons-codec'])

            // retrofit + okHttp3
            library('retrofit', 'com.squareup.retrofit2', 'retrofit').version('2.9.0')
            library('converter-gson', 'com.squareup.retrofit2', 'converter-gson').version('2.9.0')
            library('okhttp', 'com.squareup.okhttp3', 'okhttp').version('4.9.1')
            library('logging', 'com.squareup.okhttp3', 'logging-interceptor').version('4.9.1')
            library('glide','com.github.bumptech.glide','glide').version('4.15.0')
            library('glide-compiler','com.github.bumptech.glide','compiler').version('4.15.0')
            library('glide-transformations','jp.wasabeef','glide-transformations').version('4.0.0')
            // 网络库依赖
            bundle('http', ['retrofit', 'converter-gson', 'okhttp', 'logging'])
            bundle('glide',['glide','glide-transformations'])

        }
        create('googleLibs') {
            library('material', 'com.google.android', 'material').version('1.5.0')
        }

        create('composeLibs'){
            library('material', 'androidx.compose.material', 'material').version('1.3.1')
            library('ui', 'androidx.compose.ui', 'ui').version('1.3.3')
            library('preview', 'androidx.compose.ui', 'ui-tooling-preview').version('1.3.3')
            library('foundation', 'androidx.compose.foundation', 'foundation').version('1.4.0-beta02')
            library('icons', 'androidx.compose.material', 'material-icons-core').version('1.3.1')
            library('icons-ext', 'androidx.compose.material', 'material-icons-extended').version('1.3.1')
            library('livedata', 'androidx.compose.runtime', 'runtime-livedata').version('1.3.3')
            library('viewmodel-act', 'androidx.activity', 'activity-compose').version('1.6.1')
            library('viewmodel-frgament', 'androidx.lifecycle', 'lifecycle-viewmodel-compose').version('2.5.1')
            library('tooling','androidx.compose.ui','ui-tooling').version('1.3.3')
            bundle('compose', ['material', 'ui', 'preview','foundation','icons', 'icons-ext', 'viewmodel-act','viewmodel-frgament','livedata','tooling'])
        }

        /**
         * 1、只需在app/build.gradle中alias(pluginLibs.plugins.hilt.android)即可
         * 2、对于没有发布到gradlePluginPortal的插件，暂时沿用老的模式，即buildScript { dependencies{  classpath 'xxx.xxx.xxx:1.0.0'}}
         * create('pluginLibs'){
         *    plugin('hilt-android','com.google.dagger.hilt.android').version('2.41')
         * }
         */
    }
}

rootProject.name = "Blinker"
include ':app'
include ':nav-plugin'
include ':nav-plugin-runtime'