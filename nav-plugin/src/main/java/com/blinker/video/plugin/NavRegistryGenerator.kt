package com.blinker.video.plugin

import com.blinker.video.plugin.runtime.NavData
import com.squareup.kotlinpoet.ClassName
import com.squareup.kotlinpoet.CodeBlock
import com.squareup.kotlinpoet.FileSpec
import com.squareup.kotlinpoet.FunSpec
import com.squareup.kotlinpoet.KModifier
import com.squareup.kotlinpoet.ParameterizedTypeName.Companion.parameterizedBy
import com.squareup.kotlinpoet.PropertySpec
import com.squareup.kotlinpoet.TypeSpec
import java.io.File

object NavRegistryGenerator {

    fun generate(outputDir: File, navDatas: List<NavData>) {
        val navDataClass = ClassName("com.blinker.video.plugin.runtime", "NavData")
        val list = ClassName("kotlin.collections", "List").parameterizedBy(navDataClass)
        val arrayList = ClassName("kotlin.collections", "ArrayList").parameterizedBy(navDataClass)

        val property = PropertySpec.builder("navList", arrayList, KModifier.PRIVATE)
            .initializer("ArrayList()")
            .build()

        val function = FunSpec.builder("get")
            .returns(list)
            .addCode(
                """
                val list = ArrayList<NavData>()
                list.addAll(navList)
                return list
                """.trimIndent()
            )
            .build()

        val typeSpec = TypeSpec.objectBuilder("NavRegistry")
            .addProperty(property)
            .addInitializerBlock(
                CodeBlock.builder()
                    .add(navDatas.joinToString("\n") {
                        """navList.add(NavData("${it.route}", "${it.className}", ${it.type}))"""
                    })
                    .build()
            )
            .addFunction(function)
            .build()

        val fileSpec = FileSpec.builder("com.blinker.video.plugin.runtime", "NavRegistry")
            .addComment("Generated by NavTransform, do not modify!")
            .addType(typeSpec)
            .build()

        fileSpec.writeTo(outputDir.toPath())
    }
}